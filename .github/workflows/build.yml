name: Build

on:
  workflow_call:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build
        run: |
          bash ./gradlew :app:assembleDebug
          
          # Get the app version dynamically from the build
          VERSION=$(./gradlew -q printAppVersionName)
          
          # Export VERSION to GitHub Actions environment
          echo "VERSION=${VERSION}" >> $GITHUB_ENV  
          
          # Rename APK to match the desired format
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/spacexDev-release_${VERSION}.apk

      # Upload APK
      - name: Upload branch APK
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: spacexDev-release_${{ env.VERSION }}
          path: app/build/outputs/apk/debug/spacexDev-release_${{ env.VERSION }}.apk

      # Get Artifact URL for the QR Code
      - name: Get Artifact URL
        id: get-artifact-url
        run: |
          # Get artifact ID using GitHub API
          ARTIFACT_ID=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" | \
            jq -r ".artifacts[] | select(.name==\"spacexDev-release_${{ env.VERSION }}\") | .id")
          
          # Construct the full artifact URL
          artifact_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/$ARTIFACT_ID"
          
          # Output the artifact URL
          echo "Artifact URL: $artifact_url"
          echo "::set-output name=artifact_url::$artifact_url"

      # Create or update comment with QR code
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Scan this QR code to download the release APK.

      - name: Create comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :rocket: Scan this QR code to download the release APK.
            
            ![image](https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${{ steps.get-artifact-url.outputs.artifact_url }})
            
            [Download spacexDev-release.apk](${{ steps.get-artifact-url.outputs.artifact_url }})

      - name: Update comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            :rocket: Scan this QR code to download the release APK.
            
            ![image](https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${{ steps.get-artifact-url.outputs.artifact_url }})
            
            [Download spacexDev-release.apk](${{ steps.get-artifact-url.outputs.artifact_url }})
