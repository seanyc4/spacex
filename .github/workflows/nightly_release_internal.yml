name: Nightly Release Internal

on:
  schedule:
    - cron: "0 2 * * 1-4"  # Every Mon‚ÄìThu at 02:00 UTC (03:00 UK/BST)

  workflow_dispatch:

jobs:

  # ---------------------------------------------
  # üîñ Checks for Commits & Generates Release Tag
  # ---------------------------------------------
  generate-tag:
    name: Generate Release Tag
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.set-tag.outputs.RELEASE_TAG }}

    steps:
      - uses: actions/checkout@v4
      - name: Run tag release script
        id: set-tag
        run: .github/scripts/tag_release.sh

  # ----------------------------------------
  # üß© Versioning - Bump Version Code & Name
  # ----------------------------------------
  version-bump:
    name: Version Bump
    needs: generate-tag
    uses: ./.github/workflows/version_bump.yml
    secrets: inherit

  # -------------------------------------------------
  # ‚è≥ Wait for version bump PR to be merged
  # -------------------------------------------------

  wait-for-version-bump-merge:
    name: ‚è≥ Wait for Version Bump PR Merge
    needs: version-bump
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI (manual download)
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.47.0/gh_2.47.0_linux_amd64.tar.gz -o gh.tar.gz
          tar -xzf gh.tar.gz
          sudo mv gh_2.47.0_linux_amd64/bin/gh /usr/local/bin/gh
          gh --version

      - name: Set up dynamic branch name
        id: version
        run: |
          NEW_VERSION_NAME=$(bash .github/scripts/version_bump.sh --dry-run | grep -oE '[0-9]+$' | tr -d '\n')
          echo "new_branch=version-bump/$NEW_VERSION_NAME" >> "$GITHUB_OUTPUT"
      

      - name: Wait for PR merge
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          BRANCH_NAME=${{ steps.version.outputs.new_branch }}

          echo "üîç Looking for PR from branch: $BRANCH_NAME"
          PR_NUMBER=$(gh pr list --state open --head "$BRANCH_NAME" --json number -q '.[0].number')

          if [ -z "$PR_NUMBER" ]; then
            echo "‚ùå No open PR found with head branch '$BRANCH_NAME'"
            exit 1
          fi

          echo "‚è≥ Waiting for PR #$PR_NUMBER to be merged..."
          for i in {1..30}; do
            MERGED_AT=$(gh pr view "$PR_NUMBER" --json mergedAt -q '.mergedAt')
            if [ "$MERGED_AT" != "null" ] && [ -n "$MERGED_AT" ]; then
              echo "‚úÖ PR #$PR_NUMBER has been merged at $MERGED_AT"
              exit 0
            fi
            echo "‚è≥ Still waiting... attempt $i"
            sleep 30
          done

          echo "‚ùå Timeout reached. PR #$PR_NUMBER was not merged."
          exit 1
      
      

      # ---------------------------------------------
  # üöÄ Tags the Release & Generates Release Notes
  # ---------------------------------------------
  github-release:
    name: GitHub Release
    needs: [generate-tag, wait-for-version-bump-merge]
    runs-on: ubuntu-latest

    steps:
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: ${{ needs.generate-tag.outputs.RELEASE_TAG }}
          token: ${{ secrets.GH_TOKEN }}
