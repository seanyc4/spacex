name: Release APK

on:
  workflow_call:

jobs:
    build-release-apk:
      name: Build Signed APK
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: set up JDK
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '17'
            cache: 'gradle'

        - name: Setup Android SDK
          uses: android-actions/setup-android@v3

        - name: Add secrets
          run: |
            cat > local.properties << ENDOFFILE
            API_KEY=${{ secrets.API_KEY }}
            ENDOFFILE

        # Build Release APK
        - name: Build Release APK
          run: ./gradlew :app:assembleRelease --stacktrace

        # Get the app version dynamically from the build
        - name: Get the app version dynamically from the build
          run: |
            VERSION=$(./gradlew -q printAppVersionName)
            echo "VERSION=${VERSION}" >> $GITHUB_ENV

        # Sign the APK
        - name: Sign Android release
          uses: r0adkll/sign-android-release@v1
          id: sign_app
          with:
            releaseDirectory: app/build/outputs/apk/release
            signingKeyBase64: ${{ secrets.SIGNING_KEY }}
            alias: ${{ secrets.ALIAS }}
            keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
            keyPassword: ${{ secrets.KEY_PASSWORD }}
          env:
            BUILD_TOOLS_VERSION: "34.0.0"

        # Rename APK
        - name: Rename APK
          run: mv app/build/outputs/apk/release/app-release-unsigned-signed.apk app/build/outputs/apk/release/spacex-release_${VERSION}.apk

        # Get the current date and time
        - name: Get current date and time
          id: datetime
          run: echo "datetime=$(date +'%Y-%m-%d at %H:%M:%S')" >> $GITHUB_ENV

        # Upload APK
        - name: Upload branch APK
          id: upload
          uses: actions/upload-artifact@v4
          with:
            name: spacex-release_${{ env.VERSION }}
            path: app/build/outputs/apk/release/spacex-release_${{ env.VERSION }}.apk

        # Get Artifact URL for the QR Code
        - name: Get Artifact URL
          id: get-artifact-url
          run: |
            # Get artifact ID using GitHub API
            ARTIFACT_ID=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" | \
              jq -r ".artifacts[] | select(.name==\"spacex-release_${{ env.VERSION }}\") | .id")

            # Construct the full artifact URL
            artifact_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/$ARTIFACT_ID"

            # Output the artifact URL
            echo "Artifact URL: $artifact_url"
            echo "::set-output name=artifact_url::$artifact_url"

        # Create or update comment with QR code
        - name: Find Comment
          uses: peter-evans/find-comment@v3
          id: fc
          with:
            issue-number: ${{ github.event.pull_request.number }}
            comment-author: 'github-actions[bot]'
            body-includes: Scan this QR code to download the release APK.

        - name: Create comment
          if: steps.fc.outputs.comment-id == ''
          uses: peter-evans/create-or-update-comment@v4
          with:
            issue-number: ${{ github.event.pull_request.number }}
            body: |
              :rocket: Scan this QR code to download the release APK.

              ![image](https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${{ steps.get-artifact-url.outputs.artifact_url }})

              [Download spacex-release.apk](${{ steps.get-artifact-url.outputs.artifact_url }})

              Built on **${{ env.datetime }}**

        - name: Update comment
          if: steps.fc.outputs.comment-id != ''
          uses: peter-evans/create-or-update-comment@v4
          with:
            comment-id: ${{ steps.fc.outputs.comment-id }}
            edit-mode: replace
            body: |
              :rocket: Scan this QR code to download the release APK.

              ![image](https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${{ steps.get-artifact-url.outputs.artifact_url }})

              [Download spacex-release.apk](${{ steps.get-artifact-url.outputs.artifact_url }})

              Built on **${{ env.datetime }}**



