apply plugin: Plugins.android_library
apply plugin: Plugins.kotlin
apply plugin: Plugins.kotlin_parcelize

android {
    compileSdk Android.compileSdk

    defaultConfig {
        minSdk Android.minSdk
        targetSdk Android.targetSdk
        versionCode Android.versionCode
        versionName Android.versionName
        testInstrumentationRunner libs.plugins.hiltTestRunner.get().pluginId
        vectorDrawables.useSupportLibrary true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility Java.java_compile_version
        targetCompatibility Java.java_compile_version
    }

    kotlinOptions {
        jvmTarget = Java.java_version
    }

    kotlin {
        sourceSets {
            main.kotlin.srcDirs += 'build/generated/ksp/main/kotlin'
            test.kotlin.srcDirs += 'build/generated/ksp/test/kotlin'
        }
    }

    lint {
        checkDependencies true
    }

    sourceSets {
        getByName("test").resources.srcDir("src/test/res")
    }

    testOptions {
        // Fix for mock issue on >= API 28
        packaging.jniLibs.useLegacyPackaging = true

        // To prevent textUtils error with espresso idling resource
        unitTests.returnDefaultValues = true

        unitTests.all {
            it.useJUnitPlatform()
            jvmArgs += "--add-opens=java.base/java.time=ALL-UNNAMED"
        }
    }
}

dependencies {
    implementation(libs.timber)
    testImplementation(libs.jupiterEngine)
    testImplementation(libs.jupiterApi)
    testImplementation(libs.jupiterParams)
    testImplementation(libs.junit4)
}