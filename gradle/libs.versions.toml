[versions]
agp = "8.2.2"
junit5Plugin = "1.8.2.0"
room = "2.6.1"
appCompat = "1.6.1"
coreKtx = "1.12.0"
dataStore = "1.1.0-beta02"
fragment = "1.7.0-beta01"
firebaseBoM = "32.8.0"
navigation = "2.7.7"
lifecycle = "2.7.0"
splash = "1.0.1"
glideCompose = "1.0.0-beta01"
hilt = "2.50"
androidHilt = "1.2.0"
hiltNavigationCompose = "1.2.0"
gsonVersion = "2.10.1"
kotlin = "1.9.22"
kotlinKSP = "1.9.22-1.0.17"
kotlinImmutable = "0.3.6"
kotlinxDateTime = "0.4.0"
coroutines = "1.7.3"
kotlinSerialization = "1.6.0"
retrofit2 = "2.9.0"
leakCanary = "2.9.1"
okHttp = "4.9.3"
timber = "5.0.1"
composeCompiler = "1.5.10"
composeBom = "2024.03.00"
composeLifecycle = "2.7.0"
composeNavigation = "2.7.7"
composeThemeAdapter = "1.2.1"
composeConstraintLayout = "1.1.0-alpha13"
androidxTestExt = "1.1.5"
espressoCore = "3.5.0"
mockk = "1.13.5"
testRules = "1.5.0"
testRunner = "1.5.2"
testCore = "1.5.0"
testMonitor = "1.6.1"
testArchCore = "2.2.0"
junit4 = "4.13.2"
junitJupiter = "5.8.2"
scalingPixels = "1.0.6"
materialDialogs = "3.3.0"

[libraries]
# AppCompat
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }

gradle-buildtools = { module = "com.android.tools.build:gradle", version.ref = "agp" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-activity = { module = "androidx.activity:activity-compose" }
compose-viewbinding = { module = "androidx.compose.ui:ui-viewbinding" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "composeLifecycle" }
compose-viewmodelLifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeLifecycle" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-fragment = { module = "androidx.fragment:fragment-compose", version.ref = "fragment" }
compose-layout = { module = "androidx.compose.foundation:foundation-layout" }
compose-material = { module = "androidx.compose.material:material" }
compose-iconsCore = { module = "androidx.compose.material:material-icons-core" }
compose-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }
compose-ripple = { module = "androidx.compose.material:material-ripple" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-themeAdapter = { module = "com.google.android.material:compose-theme-adapter", version.ref = "composeThemeAdapter" }
compose-constraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout" }

# Compose Test Libraries
compose-uiTest = { module = "androidx.compose.ui:ui-test" }
compose-uiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
compose-uiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Core KTX
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }

# DataStore
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# Fragment
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }

# Navigation
navigation-dynamic = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "navigation" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }


# Room
room-common = { module = "androidx.room:room-common", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# Lifecycle
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-livedataktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycle" }

# Splash Screen
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splash" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBoM" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }

# Glide Compose
glideCompose = { module = "com.github.bumptech.glide:compose", version.ref = "glideCompose" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-viewmodel = { module = "androidx.hilt:hilt-lifecycle-viewmodel", version.ref = "androidHilt" }
hilt-navigationcompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# Hilt Testing
hilt-androidtesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# Gson
googleGson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }

# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "kotlinKSP" }
kotlin-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinImmutable" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# Kotlin Testing
kotlin-coroutinestest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

materialDialogsCore = { module = "com.afollestad.material-dialogs:core", version.ref = "materialDialogs" }

# Retrofit
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
square-retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2" }
square-leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
square-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }
square-logginginterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }

scalingpixels = { module = "com.intuit.sdp:sdp-android", version.ref = "scalingPixels" }

# Timber
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

androidxTestExt = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestExt" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
espressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoCore" }
idlingResource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espressoCore" }
mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
testRules = { module = "androidx.test:rules", version.ref = "testRules" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunner" }
testCoreKtx = { module = "androidx.test:core-ktx", version.ref = "testCore" }
testCoreMonitor = { module = "androidx.test:monitor", version.ref = "testMonitor" }
testArchCore = { module = "androidx.arch.core:core-testing", version.ref = "testArchCore" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
jupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
jupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
jupiterParams = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiter" }
junit5 = { module = "de.mannodermaus.gradle.plugins:android-junit5", version.ref = "junit5Plugin"}


[bundles]
androidTestLibraries = ["androidxTestExt", "espressoCore", "espressoIntents", "idlingResource", "mockkAndroid", "mockk", "testRules", "testRunner", "testCoreKtx", "testCoreMonitor", "testArchCore"]
junitJupiterLibraries = ["jupiterApi", "jupiterEngine", "jupiterParams"]


[plugins]
androidApplication = { id = "com.android.application" }
androidLibrary = { id = "com.android.library" }
kotlinAndroid = { id = "android" }
kotlinParcelize = { id = "kotlin-parcelize" }
kotlinSerializationPlugin = { id = "plugin.serialization"}
kotlinKsp = { id = "com.google.devtools.ksp" }
hilt = { id = "dagger.hilt.android.plugin" }
junit5 = { id = "de.mannodermaus.android-junit5" }
