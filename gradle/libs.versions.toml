[versions]
agpVersion = "8.2.2"
androidHiltVersion = "1.2.0"
androidxTestExtVersion = "1.1.5"
appCompatVersion = "1.6.1"
composeBom = "2024.03.00"
composeCompilerVersion = "1.5.10"
composeConstraintLayoutVersion = "1.1.0-alpha13"
composeLifecycleVersion = "2.7.0"
composeNavigationVersion = "2.7.7"
composeThemeAdapterVersion = "1.2.1"
coreKtxVersion = "1.12.0"
datastoreVersion = "1.1.0-beta02"
espressoCoreVersion = "3.5.0"
firebaseBoM = "32.8.0"
fragmentVersion = "1.7.0-beta01"
glideComposeVersion = "1.0.0-beta01"
gsonVersion = "2.10.1"
hiltNavigationComposeVersion = "1.2.0"
hiltVersion = "2.50"
junit4Version = "4.13.2"
junit5Version = "1.8.2.0"
kotlinCoroutinesVersion = "1.7.3"
kotlinImmutableVersion = "0.3.6"
kotlinKSPVersion = "1.9.22-1.0.17"
kotlinSerializationVersion = "1.6.0"
kotlinVersion = "1.9.22"
kotlinxDateTimeVersion = "0.4.0"
leakCanaryVersion = "2.9.1"
lifecycleVersion = "2.7.0"
materialDialogsVersion = "3.3.0"
mockkVersion = "1.13.5"
navigationVersion = "2.7.7"
okHttpVersion = "4.9.3"
retrofit2Version = "2.9.0"
roomVersion = "2.6.1"
scalingPixelsVersion = "1.0.6"
splashVersion = "1.0.1"
testArchCoreVersion = "2.2.0"
testCoreVersion = "1.5.0"
testMonitorVersion = "1.6.1"
testRulesVersion = "1.5.0"
testRunnerVersion = "1.5.2"
timberVersion = "5.0.1"


[libraries]
# AppCompat
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompatVersion" }

# Compose
compose-activity = { module = "androidx.activity:activity-compose" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-constraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayoutVersion" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-fragment = { module = "androidx.fragment:fragment-compose", version.ref = "fragmentVersion" }
compose-iconsCore = { module = "androidx.compose.material:material-icons-core" }
compose-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }
compose-layout = { module = "androidx.compose.foundation:foundation-layout" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "composeLifecycleVersion" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigationVersion" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ripple = { module = "androidx.compose.material:material-ripple" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-viewmodelLifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeLifecycleVersion" }

# Compose Test Libraries
compose-uiTest = { module = "androidx.compose.ui:ui-test" }
compose-uiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
compose-uiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Core KTX
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtxVersion" }

# DataStore
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastoreVersion" }

# Firebase
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBoM" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }

# Fragment
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentVersion" }

# Glide Compose
glideCompose = { module = "com.github.bumptech.glide:compose", version.ref = "glideComposeVersion" }

# GradleAGP
gradle-buildtools = { module = "com.android.tools.build:gradle", version.ref = "agpVersion" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltVersion" }
hilt-androidtesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltVersion" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltVersion" }
hilt-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hiltVersion" }
hilt-navigationcompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationComposeVersion" }
hilt-viewmodel = { module = "androidx.hilt:hilt-lifecycle-viewmodel", version.ref = "androidHiltVersion" }

# Gson
googleGson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }

# Kotlin
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinCoroutinesVersion" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutinesVersion" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTimeVersion" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
kotlin-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinImmutableVersion" }
kotlin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "kotlinKSPVersion" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerializationVersion" }

# Kotlin Testing
kotlin-coroutinestest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutinesVersion" }
kotlin-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }

# Lifecycle
lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycleVersion" }
lifecycle-livedataktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleVersion" }
lifecycle-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleVersion" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleVersion" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }

# MaterialDialogs
materialDialogsCore = { module = "com.afollestad.material-dialogs:core", version.ref = "materialDialogsVersion" }

# Navigation
navigation-dynamic = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "navigationVersion" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigationVersion" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigationVersion" }

# Retrofit
square-leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanaryVersion" }
square-logginginterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttpVersion" }
square-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttpVersion" }
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttpVersion" }
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2Version" }
square-retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2Version" }

# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }

# ScalingPixels
scalingpixels = { module = "com.intuit.sdp:sdp-android", version.ref = "scalingPixelsVersion" }

# Splash Screen
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashVersion" }

# TestDependecies
androidxTestExt = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestExtVersion" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
espressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoCoreVersion" }
idlingResource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espressoCoreVersion" }
junit4 = { module = "junit:junit", version.ref = "junit4Version" }
junit5 = { module = "de.mannodermaus.gradle.plugins:android-junit5", version.ref = "junit5Version" }
mockk = { module = "io.mockk:mockk", version.ref = "mockkVersion" }
mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockkVersion" }
testArchCore = { module = "androidx.arch.core:core-testing", version.ref = "testArchCoreVersion" }
testCoreKtx = { module = "androidx.test:core-ktx", version.ref = "testCoreVersion" }
testCoreMonitor = { module = "androidx.test:monitor", version.ref = "testMonitorVersion" }
testRules = { module = "androidx.test:rules", version.ref = "testRulesVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }

# Timber
timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }


[plugins]
android = { id = "android" }
androidApplication = { id = "com.android.application" }
androidLibrary = { id = "com.android.library" }
hilt = { id = "dagger.hilt.android.plugin" }
hiltTestRunner = { id = "com.seancoyle.core.testing.HiltTestRunner" }
junit5 = { id = "de.mannodermaus.android-junit5" }
kotlinAndroid = { id = "kotlin-android" }
kotlinKsp = { id = "com.google.devtools.ksp" }
kotlinParcelize = { id = "kotlin-parcelize" }
kotlinSerializationPlugin = { id = "plugin.serialization" }


[bundles]
androidTestLibraries = [
    "androidxTestExt",
    "compose-uiTestJunit4",
    "espressoCore",
    "espressoIntents",
    "hilt-androidtesting",
    "idlingResource",
    "junit4",
    "junit5",
    "mockk",
    "testArchCore",
    "testCoreKtx",
    "testCoreMonitor",
    "testRules",
    "testRunner"
]